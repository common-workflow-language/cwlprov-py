from bagit import *
from bdbag import BAGIT_VERSION as BAGIT_VERSION, PROJECT_URL as PROJECT_URL, VERSION as VERSION, escape_uri as escape_uri
from collections.abc import Generator
from typing import Any

algorithms_guaranteed: Any
SUPPORTED_BAGIT_SPECS: Any

def parse_version(version): ...
def validate_remote_entries(remote_entries, bag_path: str = ...): ...
def make_remote_file_entry(remote_entries, filename, url, length, alg, digest) -> None: ...

class BaggingInterruptedError(RuntimeError): ...
class BagManifestConflict(BagError): ...
class UnexpectedRemoteFile(ManifestErrorDetail): ...

class BDBag(Bag):
    remote_entries: Any
    def __init__(self, path: Any | None = ...) -> None: ...
    def files_to_be_fetched(self, normalize: bool = ...) -> None: ...
    def compare_manifests_with_fs_and_fetch(self): ...
    def add_remote_file(self, filename, url, length, alg, digest) -> None: ...
    def save(self, processes: int = ..., manifests: bool = ...) -> None: ...
    def validate(self, processes: int = ..., fast: bool = ..., completeness_only: bool = ..., callback: Any | None = ...): ...

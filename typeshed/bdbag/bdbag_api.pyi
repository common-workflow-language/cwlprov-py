from bdbag import *
from bdbag.bdbag_config import *
from bdbag.fetch.auth.keychain import DEFAULT_KEYCHAIN_FILE as DEFAULT_KEYCHAIN_FILE
from bdbag.fetch.fetcher import fetch_bag_files as fetch_bag_files, fetch_single_file as fetch_single_file
from typing import Any

logger: Any

def configure_logging(level=..., logpath: Any | None = ..., filemode: str = ..., log_format=...) -> None: ...
def read_metadata(metadata_file): ...
def cleanup_bag(bag_path, save: bool = ...): ...
def ensure_bag_path_exists(bag_path, save: bool = ...): ...
def revert_bag(bag_path) -> None: ...
def prune_bag_manifests(bag): ...
def is_bag(bag_path): ...
def check_payload_consistency(bag, skip_remote: bool = ..., quiet: bool = ...): ...
def should_update_manifests(bag, bag_algorithms, prune_manifests, remote_file_manifest): ...
def make_bag(bag_path, algs: Any | None = ..., update: bool = ..., save_manifests: bool = ..., prune_manifests: bool = ..., metadata: Any | None = ..., metadata_file: Any | None = ..., remote_file_manifest: Any | None = ..., config_file: Any | None = ..., ro_metadata: Any | None = ..., ro_metadata_file: Any | None = ...): ...
def archive_bag(bag_path, bag_archiver): ...
def extract_bag(bag_path, output_path: Any | None = ..., temp: bool = ...): ...
def validate_bag(bag_path, fast: bool = ..., callback: Any | None = ..., config_file: Any | None = ...) -> None: ...
def validate_bag_structure(bag_path, skip_remote: bool = ...) -> None: ...
def validate_bag_profile(bag_path, profile_path: Any | None = ...): ...
def validate_bag_serialization(bag_path, bag_profile: Any | None = ..., bag_profile_path: Any | None = ...) -> None: ...
def generate_remote_files_from_manifest(remote_file_manifest, algs, strict: bool = ...): ...
def generate_ro_manifest(bag_path, overwrite: bool = ..., config_file: Any | None = ...) -> None: ...
def resolve_fetch(bag_path, force: bool = ..., callback: Any | None = ..., keychain_file=..., config_file: Any | None = ..., filter_expr: Any | None = ..., **kwargs): ...
def materialize(input_path, output_path: Any | None = ..., fetch_callback: Any | None = ..., validation_callback: Any | None = ..., keychain_file=..., config_file: Any | None = ..., filter_expr: Any | None = ..., force: bool = ..., **kwargs): ...

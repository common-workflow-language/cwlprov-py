from rdflib.parser import Parser
from typing import Any

class DummySink:
    length: int
    def __init__(self) -> None: ...
    def triple(self, s, p, o) -> None: ...

def unquote(s): ...
def uriquote(uri): ...

class W3CNTriplesParser:
    sink: Any
    buffer: Any
    file: Any
    line: str
    def __init__(self, sink: Any | None = ..., bnode_context: Any | None = ...) -> None: ...
    def parse(self, f, bnode_context: Any | None = ...): ...
    def parsestring(self, s, **kwargs) -> None: ...
    def readline(self): ...
    def parseline(self, bnode_context: Any | None = ...) -> None: ...
    def peek(self, token): ...
    def eat(self, pattern): ...
    def subject(self, bnode_context: Any | None = ...): ...
    def predicate(self): ...
    def object(self, bnode_context: Any | None = ...): ...
    def uriref(self): ...
    def nodeid(self, bnode_context: Any | None = ...): ...
    def literal(self): ...

class NTGraphSink:
    g: Any
    def __init__(self, graph) -> None: ...
    def triple(self, s, p, o) -> None: ...

class NTParser(Parser):
    @classmethod
    def parse(cls, source, sink, **kwargs) -> None: ...

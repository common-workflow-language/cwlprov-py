from rdflib.parser import Parser
from typing import Any
from xml.sax.saxutils import handler

class TriXHandler(handler.ContentHandler):
    store: Any
    preserve_bnode_ids: bool
    def __init__(self, store) -> None: ...
    bnode: Any
    graph: Any
    triple: Any
    state: int
    lang: Any
    datatype: Any
    def reset(self) -> None: ...
    locator: Any
    def setDocumentLocator(self, locator) -> None: ...
    def startDocument(self) -> None: ...
    def startPrefixMapping(self, prefix, namespace) -> None: ...
    def endPrefixMapping(self, prefix) -> None: ...
    chars: str
    def startElementNS(self, name, qname, attrs) -> None: ...
    def endElementNS(self, name, qname) -> None: ...
    def get_bnode(self, label): ...
    def characters(self, content) -> None: ...
    def ignorableWhitespace(self, content) -> None: ...
    def processingInstruction(self, target, data) -> None: ...
    def error(self, message) -> None: ...

def create_parser(store): ...

class TriXParser(Parser):
    def __init__(self) -> None: ...
    def parse(self, source, sink, **args) -> None: ...

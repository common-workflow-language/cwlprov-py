from typing import Any

class NodeMaker:
    def range(self): ...
    def __call__(self, x): ...

class NodeUri(NodeMaker):
    prefix: Any
    class_: Any
    def __init__(self, prefix, class_) -> None: ...
    def __call__(self, x): ...
    def range(self): ...

class NodeLiteral(NodeMaker):
    f: Any
    def __init__(self, f: Any | None = ...) -> None: ...

class NodeFloat(NodeLiteral):
    def __call__(self, x): ...
    def range(self): ...

class NodeInt(NodeLiteral):
    def __call__(self, x): ...
    def range(self): ...

class NodeBool(NodeLiteral):
    def __call__(self, x): ...
    def range(self): ...

class NodeReplace(NodeMaker):
    a: Any
    b: Any
    def __init__(self, a, b) -> None: ...
    def __call__(self, x): ...

class NodeDate(NodeLiteral):
    def __call__(self, x): ...
    def range(self): ...

class NodeSplit(NodeMaker):
    sep: Any
    f: Any
    def __init__(self, sep, f) -> None: ...
    def __call__(self, x): ...
    def range(self): ...

class CSV2RDF:
    CLASS: Any
    BASE: Any
    PROPBASE: Any
    IDENT: str
    LABEL: Any
    DEFINECLASS: bool
    SKIP: int
    DELIM: str
    DEFAULT: Any
    COLUMNS: Any
    PROPS: Any
    OUT: Any
    triples: int
    def __init__(self) -> None: ...
    def triple(self, s, p, o) -> None: ...
    def convert(self, csvreader) -> None: ...

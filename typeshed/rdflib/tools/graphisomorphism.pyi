from collections.abc import Generator
from rdflib import BNode as BNode, Graph as Graph
from typing import Any

class IsomorphicTestableGraph(Graph):
    hash: Any
    def __init__(self, **kargs) -> None: ...
    def internal_hash(self): ...
    def hashtriples(self) -> Generator[Any, None, None]: ...
    def vhash(self, term, done: bool = ...): ...
    def vhashtriples(self, term, done) -> Generator[Any, None, None]: ...
    def vhashtriple(self, triple, term, done) -> Generator[Any, None, None]: ...
    def __eq__(self, G): ...
    def __ne__(self, G): ...

def main() -> None: ...

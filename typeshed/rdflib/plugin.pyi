from pkg_resources import EntryPoint
from rdflib.exceptions import Error
from typing import Any, Iterator, Optional, Type, TypeVar, overload

class PluginException(Error): ...
PluginT = TypeVar('PluginT')

class Plugin:
    name: Any
    kind: Any
    module_path: Any
    class_name: Any
    def __init__(self, name: str, kind: Type[PluginT], module_path: str, class_name: str) -> None: ...
    def getClass(self) -> Type[PluginT]: ...

class PKGPlugin(Plugin[PluginT]):
    name: Any
    kind: Any
    ep: Any
    def __init__(self, name: str, kind: Type[PluginT], ep: EntryPoint) -> None: ...
    def getClass(self) -> Type[PluginT]: ...

def register(name: str, kind: Type[Any], module_path, class_name): ...
def get(name: str, kind: Type[PluginT]) -> Type[PluginT]: ...
@overload
def plugins(name: Optional[str] = ..., kind: Type[PluginT] = ...) -> Iterator[Plugin[PluginT]]: ...
@overload
def plugins(name: Optional[str] = ..., kind: None = ...) -> Iterator[Plugin]: ...

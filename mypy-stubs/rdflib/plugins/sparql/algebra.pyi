from rdflib import BNode as BNode, Literal as Literal, URIRef as URIRef, Variable as Variable
from rdflib.paths import AlternativePath as AlternativePath, InvPath as InvPath, MulPath as MulPath, NegatedPath as NegatedPath, SequencePath as SequencePath
from rdflib.plugins.sparql.operators import TrueFilter as TrueFilter, and_ as and_
from rdflib.plugins.sparql.parserutils import CompValue as CompValue, Expr as Expr
from rdflib.plugins.sparql.sparql import Prologue as Prologue, Query as Query
from rdflib.term import Identifier as Identifier
from typing import Any

def OrderBy(p, expr): ...
def ToMultiSet(p): ...
def Union(p1, p2): ...
def Join(p1, p2): ...
def Minus(p1, p2): ...
def Graph(term, graph): ...
def BGP(triples: Any | None = ...): ...
def LeftJoin(p1, p2, expr): ...
def Filter(expr, p): ...
def Extend(p, expr, var): ...
def Values(res): ...
def Project(p, PV): ...
def Group(p, expr: Any | None = ...): ...
def reorderTriples(l_): ...
def triples(l): ...
def translatePName(p, prologue): ...
def translatePath(p): ...
def translateExists(e): ...
def collectAndRemoveFilters(parts): ...
def translateGroupOrUnionGraphPattern(graphPattern): ...
def translateGraphGraphPattern(graphPattern): ...
def translateInlineData(graphPattern): ...
def translateGroupGraphPattern(graphPattern): ...

class StopTraversal(Exception):
    rv: Any
    def __init__(self, rv) -> None: ...

def traverse(tree, visitPre=..., visitPost=..., complete: Any | None = ...): ...
def translateAggregates(q, M): ...
def translateValues(v): ...
def translate(q): ...
def simplify(n): ...
def analyse(n, children): ...
def translatePrologue(p, base, initNs: Any | None = ..., prologue: Any | None = ...): ...
def translateQuads(quads): ...
def translateUpdate1(u, prologue): ...
def translateUpdate(q, base: Any | None = ..., initNs: Any | None = ...): ...
def translateQuery(q, base: Any | None = ..., initNs: Any | None = ...): ...

class ExpressionNotCoveredException(Exception): ...

def translateAlgebra(query_algebra: Query): ...
def pprintAlgebra(q) -> None: ...

from typing import Any

class Resource:
    def __init__(self, graph, subject) -> None: ...
    graph: Any
    identifier: Any
    def __hash__(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __lt__(self, other): ...
    def __gt__(self, other): ...
    def __le__(self, other): ...
    def __ge__(self, other): ...
    def __unicode__(self): ...
    def add(self, p, o) -> None: ...
    def remove(self, p, o: Any | None = ...) -> None: ...
    def set(self, p, o) -> None: ...
    def subjects(self, predicate: Any | None = ...): ...
    def predicates(self, o: Any | None = ...): ...
    def objects(self, predicate: Any | None = ...): ...
    def subject_predicates(self): ...
    def subject_objects(self): ...
    def predicate_objects(self): ...
    def value(self, p=..., o: Any | None = ..., default: Any | None = ..., any: bool = ...): ...
    def label(self): ...
    def comment(self): ...
    def items(self): ...
    def transitive_objects(self, predicate, remember: Any | None = ...): ...
    def transitive_subjects(self, predicate, remember: Any | None = ...): ...
    def seq(self): ...
    def qname(self): ...
    def __iter__(self): ...
    def __getitem__(self, item): ...
    def __setitem__(self, item, value) -> None: ...
